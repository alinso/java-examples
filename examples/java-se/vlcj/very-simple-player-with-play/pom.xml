<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2016 Andrea Binello ("andbin")

  This file is part of the "Java Examples" project and is licensed under the
  MIT License. See one of the license files included in the root of the project
  for the full text of the license.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>net.andbin.javaexamples.vlcj</groupId>
	<artifactId>very-simple-player-with-play</artifactId>
	<version>1.0.0</version>
	<packaging>jar</packaging>

	<description>A very simple video player with only a play button using the vlcj framework</description>

	<developers>
		<developer>
			<id>andbin</id>
			<name>Andrea Binello</name>
			<url>http://www.andbin.net</url>
		</developer>
	</developers>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.main.class>javaexample.VerySimplePlayerWithPlayMain</project.main.class>
		<project.library.directory>lib</project.library.directory>
	</properties>

	<dependencies>
		<dependency>
			<groupId>uk.co.caprica</groupId>
			<artifactId>vlcj</artifactId>
			<version>3.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.10</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!--
				The 'maven-jar-plugin' setups the creation of the jar with
				the appropriate manifest entries for the launch of the
				application from the jar.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${project.library.directory}/</classpathPrefix>
							<mainClass>${project.main.class}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!--
				The 'maven-dependency-plugin' setups the copy of all the
				dependencies into a "library" directory during the package phase.
				Note that this "library" directory matches the one configured in
				the <classpathPrefix> tag of the maven-jar-plugin.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.10</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/${project.library.directory}/</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!--
				The 'exec-maven-plugin' setups the execution of the application 
				from Maven using the command: mvn exec:java
			-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.4.0</version>
				<configuration>
					<mainClass>${project.main.class}</mainClass>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.10,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>